# 도커 단답형 퀴즈

# 1) 도커 이미지 빌드하기

# 1-1) 도커 이미지를 build 하는 명령어

docker build .


# 1-2) 위 1-1) 에서 build한 이미지를 확인하는 명령어

docker images


# 2) 도커 이미지 실행/제거하기

# 2-1) 이미지를 실행하는 명령어

docker run [imageID]


# 2-2) 종료된 컨테이너를 포함한 모든 컨테이너의 목록을 보는 명령어

docker ps -a -q


# 2-3) 실행 중인 컨테이너를 중지하는 명령어

docker stop [containerID]


# 2-4) 종료된 컨테이너를 삭제하는 명령어

docker rm [containerID]


# 2-5) 이미지를 삭제하는 명령어

docker rmi [imageID]


# 3 도커에서 Node.js 서버 실행하기

# 3-1) http://localhost:3000/boards

# 3-2) docker run -p 2000:3000 [imageID]

# 3-3) docker run -p 2000:3000 [imageID]


# 4 도커 내부에 접속하기

# 4-1) 도커 내부에 접속하기

docker exec -it [containerID] /bin/bash

# 4-2) vscode에서 index.js의 파일을 약간 수정하였습니다. 이때, 도커 내부의 파일도 수정이 될까요?

한 번 생성한 이미지는 변경이 불가능하다. 다시 빌드를 해야한다.

# 4-3) vscode에서 yarn add 명령을 이용하여 특정 패키지를 하나 설치하였습니다. 이때, 도커 내부에도 패키지가 설치될까요?

위와 마찬가지로 빌드를 통해서 package.json 업데이트 이후 Dockerfile 내부의 명령어를 통해서만 패키지가 설치된다.

# 5-1) 두 도커파일의 차이점은?

**[ 파일명: Dockerfile01 ]**

   **FROM** **node:14** 

   **WORKDIR** **/my_backend/** 

   **COPY** **. /my_backend/** 

   

   **RUN** **yarn install** 

   **CMD** **node index.js**


**[ 파일명: Dockerfile02 ]**

   **FROM** **node:14** 

   **WORKDIR** **/my_backend/** 

   **COPY ./package.json /my_backend/** 

   **COPY** **./yarn.lock /my_backend/** 

   **RUN** **yarn install** 

   **COPY** **. /my_backend/** 

   **CMD** **node index.js**


Dockerfile2의 경우 my_backend 폴더를 마지막에 복사하므로 로컬의 파일이 수정되어도 재빌드시 패키지를 도커 캐시에서 가져오므로 재설치를 하지 않는다.
